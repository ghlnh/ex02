<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.mapper.BoardMapper">

	<select id="getList" resultType="org.zerock.domain.BoardVO">
		<![CDATA[
				select * from tbl_board where bno>0
		]]>
	</select>

	<!-- BoardMapper의 insert()는 단순히 시퀀스의 다음 값으로 insert할 때 사용 insert 문은 몇 건의 
		데이터가 변경되었는지만을 알려주므로 추가 데이터의 PK는 알 수 없지만 1번의 SQL 처리만으로 작업을 완료 가능 -->
	<insert id="insert">
		insert into tbl_board(bno, title, content, writer)
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>

	<!-- insertSelectKey()는 @SelectKey라는 MyBatis의 어노테이션을 사용 *@SelectKey: 주로 
		PK 값을 미리(before) SQL문을 통해 처리하고 특정 이름으로 결과를 보관하는 방식 -->
	<insert id="insertSelectKey">
		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select seq_board.nextval from dual
		</selectKey>

		insert into tbl_board(bno, title, content, writer)
		values(#{bno},
		#{title}, #{content}, #{writer})
	</insert>

	<select id="read" resultType="org.zerock.domain.BoardVO">
		select * from tbl_board where bno =
		#{bno}
	</select>

	<delete id="delete">
		delete from tbl_board where bno = #{bno}
	</delete>

	<update id="update">
		<!-- regdate 칼럼은 최초 생성시간이므로 건드리지 않음 #{} 부분은 파라미터로 전달된 BoardVO 객체의 getter를 
			호출해서 파라미터로 처리 -->
		update tbl_board
		set title = #{title},
		content = #{content},
		writer = #{writer},
		<!-- update칼럼이 최종 수정시간을 의미하므로 현재 시간으로 변경 -->
		updateDate = sysdate
		where bno= #{bno}
	</update>

</mapper>